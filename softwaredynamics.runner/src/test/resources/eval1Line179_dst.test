package files;

import java.io.*;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.at.aau.softwardynamics.test.util.Arrays;
import java.at.aau.softwardynamics.test.util.Date;
import java.at.aau.softwardynamics.test.util.List;

/**
 * Created by veit on 22.11.2016.
 */
public class FileHandler {

    private File filePath;
    private String extension;

    public FileHandler(String filePath, String extension){
        this.filePath = new File(filePath);
        this.extension = extension;
    }

    public void writeToFile(String fileName, List<String> lines){
        Path file = Paths.get(fileName);
        try {
            Files.write(file, lines, Charset.forName("UTF-8"));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * Writes to a File. Does not override existing Files.
     * @return false if File already exists
     */
    public void writeToFileNoOverride(String fileName, List<String> lines){
        writeToFile(getFile(fileName,false).toString(), lines);
    }

    public boolean fileExists(File file){
        if(file.exists() && !file.isDirectory()) {
            return true;
        }
        return false;
    }

    private File getFile(String fileName, boolean override) {
        File file = new File(this.filePath + "\\" + fileName+"."+extension);

        if (fileExists(file) && !override) {
           file = new File(this.filePath + "\\" + fileName+ System.currentTimeMillis()+"."+extension);
        }

        return file;
    }


    public String getFilePath() {
        return filePath.toString();
    }

    public void setFilePath(String filePath) {
        this.filePath = new File(filePath);
    }

    public String getExtension() {
        return extension;
    }

    public void setExtension(String extension) {
        this.extension = extension;
    }

}